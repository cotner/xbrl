Release details:

Release 3.2
Jul 30, 2008
No changes since the last release.
Updated release number to keep in line with other modules.

Release 3.1
Feb 28, 2008
Point release to include various bug-fixes. 

Release 3.0
Date July 29, 2007
Updated release number to keep in line with other modules.

Release 2.0
Date March 23, 2007
New release to bring into line with
release numbers for other packages
for the XBRLAPI.

Release 1.1
Date: September 14, 2006
Minor refinements to algorithms.
No changes to functionality.

Release: 1.0
Date: December 11, 2005

XPointer processor

This processor is designed to handle any 
XPointer complying with the W3 specification 
that can be found at 
<a href="http://www.w3.org/TR/2003/REC-xptr-framework-20030325/">
http://www.w3.org/TR/2003/REC-xptr-framework-20030325/</a>.  
This includes, shorthand and 
scheme-based pointers.

The XPointer processor is based upon a 
javacc parser generator.  It reads in any
XPointer expression and parses it into a 
vector of pointer parts.  Each pointer part
exposes information about:
1. The XPointer scheme (local name and 
namespace prefix for the scheme)
2. The data for the XPointer part, both 
in escaped and unescaped format.

To fully resolve the XPointer scheme 
information, it is necessary to analyse the 
xmlns() pointer parts and use the 
information that they provide to 
resolve the qnames for other
custom scheme-based pointer parts.

The Grammar file, PointerGrammar.jj, is 
contained in the source distribution.

To test the parser, try running the parser 
as follows:

java org.xbrlapi.xpointer.parser.PointerGrammar <XPOINTER EXPRESSION>

It should return an integer reporting the number 
of pointer parts in the expression 
if the expression is valid.

Note that shorthand XPointers are converted into 
an equivalent element scheme pointer part.
