28 Jul. 2009
Moved the DBConnection implementation to be an inner class of the 
eXist store implementation.  Cleaned up the eXist store deletion method.

27 Jul. 2009
Eliminated the org.xbrlapi.networks.Relationship interface and implementation, 
replacing it throughout with the very similar but more complete 
org.xbrlapi.PersistedRelationship interface and implementation.
Created additional org.xbrlapi.networks.Analyser implementations
to filter relationships in various ways (all relationships or all
relationships that are not marked as being prohibited on the arc 
declaring them).  These alter the results relating to network methods
for data stores that use persisted relationships. 

21 Jul. 2009
Made most classes serializable.
Introduced axes in place of dimensions in aspect models to avoid
clashes with XDT dimensions.  This causes backward incompatibility of
the API but eliminates bugs in the dimension aspect implementations.

16 Jul. 2009
Added arc URI to the information persisted for each relationship. 
Added in persisted error information capture using the data store
to track problems as they arise during persistence of relationships. 
Added Freemarker to the list of dependencies in the examples Maven POM file.

14 Jul. 2009
Simplified the org.xbrlapi.utilities.Constants class
to use java.net.URI rather than strings for all URI constants.
Refined the treatment of type="none" XLink attributes to ensure that such
elements were not treated as XLink elements.

8 Jul. 2009
The examples have been repackaged, debugged, and extended to include
a number of new data store maintenance utilities.

30 Jun. 2009
Finalised a broad range of modifications to the relationship
persistence code; document matching performance improvements; 0
and the XPath 2.0 to XQuery 1.0 query language change.

18 Mar. 2009
Enabled the loader to augment persisted relationships upon
successful completion of a document discovery process if the
resulting data store contains a complete DTS (so that all
relationship networks can be analysed without running into 
missing fragments). Finalised the persisted relationship rendering example.

11 Mar. 2009
Changed the methods retrieving active relationships from 
a network for a given source or target fragment to return
a sorted set of relationships, sorted by order rather than
a standard list of relationships.
Eliminated the FragmentList interface and implementation.  This
is now done with standard Java collections.

10 Mar. 2009
Changed the getOrder method of the Arc fragment interface
to return a Double rather than a String.

26 Feb. 2009
Eliminated the XBRLStore interface and 
implementation, merging the functionality back into the base
store interface and implementation.  This is a precursor to
refactoring all network analysis code into the data store implementations
and out of the fragment implementations so that data store specific
optimisations are easier to exploit.
Added a new method for Networks to allow two Network collections to 
be merged.
Added more methods to get references for fragments.
Removed remaining fragment data modification methods.
Eliminated network analysis methods from the fragment interface,
pushing responsibility for such operations to the store so that the
store can optimise network analysis in various ways.

24 Feb. 2009
Completed a first cut of a network analyser that enables
interaction and analysis of persisted networks of relationships.
A lot of methods are available to facilitate easy interaction
with labels and references.

20 Feb. 2009
Modified Store to provide a wider range of query options and
to make query processing more efficient.
Added a new store query method that returns the number of results
generated rather than the actual results.
Adjusted string and indices queries to work with sets rather than lists
for efficiency purposes.
Adjusted the getArcroles and getLinkroles methods of the XBRLStore
to work with sets rather than lists for efficiency purposes.

19 Feb. 2009
Changed the store* method names in the org.xbrlapi.data.Store
interface.
Continued modifying method signatures to use URI instead of String
whereever possible.
Completed a first cut of the Storer interface and implementation
for persisting active network relationships in the data store.  This
should facilitate more efficient network analysis in some circumstances
by enabling the cost of network analysis to be handled in a once off
operation prior to the interactive analysis of the data.

18 Feb. 2009
Additional changes to method signatures to pass URIs where possible
instead of strings.  Corrected bugs in the UsedOn fragment subclass
to ensure that inherited methods are not overridden in manners that
contradict their intent.

17 Feb. 2009
Refactored fragment interfaces to distinguish document fragments from 
other kinds of XML resources in the data store. This is needed to 
retain clarity now that a broader range of information about relationships
is stored directly in the data store.

12 Feb. 2009
Made the loader process able to handle all kinds of exceptions during the
parsing process without causing the document discovery process to be derailed
or the document cache or data store to be corrupted.
Improved the efficiency of the document queue for data loading to improve
the performance when loading very large numbers of documents.

11 Feb. 2009
Added new queryForString and queryForStrings methods to 
the org.xbrlapi.data.Store interface and all implementations 
thereof.
Modified the in-store URI matching to ensure that a signature 
only needs to be computed once for each document in the data store.

28 Jan. 2009
Modified additional function signatures to work with 
URI arguments rather than string representations of URI arguments.
Added loader focussed unit testing for loading of duplicate resources.

26 Jan. 2009
Changed the loader's document queue to be a map from URIs to load 
status rather than from String representations of URIs to load 
status to enable better analysis of URI equality.
Modified the data store to keep track of reasons for documents not 
being loaded when storing the loader state.  This enables robust
handling of situations where documents that should be in the DTS are
have IO problems or have SAX parsing problems.

1 Jan. 2009
Created the local test data file release.

31. Dec. 2008
Replaced usage of URLs with URIs throughout the API.  This was done
to get better uniformity of handling of URLs and to take advantage of
the better handling of different schemes in the java.net.URI interface compared to 
the java.net.URL interface. This change does cause significant backward compatibility
issues.  However, it is expected to resolve the ongoing problems that have
been encountered when working with file-scheme URLs.
Improved the network processing efficiency of 
the rendering example.  Incorporated improvements
to the Freemarker template file from Walter Hamscher.

10 Dec. 2008
Fixed the NPE bug in the handling of processing instructions that
come before any markup in an XML document.
Fixed missing class files in the examples JAR.

9 Dec. 2008
Added in XDT aspects and dimensional aspect model to the XDT module.

5 Dec. 2008
Changed the getAttribute methods of the Arc fragment interface to 
return null if the arc does not have the specified attribute rather
than throwing an exception.

4 Dec. 2008
Added new methods to better handle analysis of presentation networks
and to provide a more complete range of network construction methods.
Added the new org.xbrlapi.networks.Network#complete method to allow
for a network to be completely constructed in a single call.

24 Nov. 2008
Fixed NPE in the method to get denominator measures for 
an org.xbrlapi.Unit that does not have a denominator.
Created the first XDT file release.

22. Nov. 2008
Fixed up the usage of the isNil method to use nil rather 
than nill and to be for facts rather than just items.
Added a measure interface and implementation to handle measures
in unit fragments.  This makes it easier to access resolved measure
QNames in numerators and denominators.  This also causes backward 
incompatibility issues for some methods of the org.xbrlapi.Unit interface.

21 Nov. 2008
Made the getNetworkRoots method of the XBRLStore a generic method and 
ensured that it does not return locators.

20 Nov. 2008
Fixed a bug in the Fragment implementation relating to getting the 
local name from a QName.  QNames without a prefix were not handled correctly.
Squeezed more performance out of the method to get the labels for a fragment.
Some new constants have been defined.

19 Nov. 2008
Added a new org.xbrlapi.aspects package to handle Aspect model population
with facts.  Aspect models can be loosely thought of as sparse hypercubes.
They are very very useful!

14 Nov. 2008
Created the first examples file release.

19 Aug. 2008
Enabled the getFragments method to use a fragment class name rather than
just part of the fragment interface name.  This makes the method more able
to work for fragment classes that are implemented in packages outside
those in the core XBRLAPI fragment implementation package.

18 Aug. 2008
Added methods to the base store implementation to enable a store
to limit query results to those fragments in the documents with 
a specified set of URLs.
Changed the query methods for the various store implementations to 
filter query results if the store knows of a list of URLs to use in
filtering query results.
Implemented new store methods to determine the documents that directly
reference and that are directly referenced by a given document based
on link analysis.

7 Aug. 2008
Changed the org.xbrlapiSAXHandlers package name
to org.xbrlapi.sax.  This is not a backward compatible 
change and code using the XBRLAPI may need to be adjusted.

6 Aug. 2008
Removed the element depth from the set of 
state information tracked by the SAX content
handler for the loader, the loader itself and
the XBRL XLink handler.  This was done by relying
instead on tracking the ElementState during SAX
parsing.
Added Attributes to the parameters of the XLink processor's endElement method.
Added the ElementState class to the org.xbrlapi.xlink package
to provide basic infrastructure for tracking attributes and making
them available to the endElement method in SAX content handlers that
are using the XLink processor. 

30 Jul. 2008
Fixed bug in queries to get network roots.
Fixed bug in caching on Windows.
Removed non-functional set methods
Released version 3.1
Eliminated several memory leaks in the Oracle Berkeley XML data store.

April 16 2008
Fixed up eXist unit testing to reflect changes in the
XBRLAPI itself.
Added a range of new constants for the XBRL role and arcroles.

10 Apr. 2008
Added resource matcher facility.

12 Mar. 2008
Changed the fragment index generation system.  This makes it 
easier to work across several data stores.

25 Feb. 2008
Discovery of documents provided as a string now works correctly.
QName lookups for fragments is faster and always works.
Network construction works for networks of various types of labels.

25. Oct. 2007
Fixed up a bug in Arc instantiation that was preventing
them from being stored in the database.  The bug was
introduced during the redesign of the fragment constructors.

24 Oct. 2007
Added the getFacts method to the concept implementation.
Added the isNumeric method to the fact implementation.

16 Oct. 2007
Modified the fragment factory to call the setFragmentIndex method
when generating new fragments.
October 16, 2006
Streamlined the DTS discovery process to eliminate
all post processing of XLink materials.
Enabled eXist data store to also operate in embedded mode,
significantly enhancing performance.

17 Sep. 2007
Modified fragment implementations to make all fragments JavaBeans.
Serialization of fragments, builders, and stores is yet to be implemented.

5 Sep. 2007
Eliminated non-working attempts to insert DTD declarations into data store fragments.
Added a new getDeclaration method for reference part fragments.
Fixed a bug in the removeFragment implementation for the DOM data store whereby the
removed fragments were not getting taken out of the XML DOM structure, only the maps onto
that DOM structure.
Added the deleteDocument and deleteRelated document methods to the store interface.  Provided
implementations of these methods in the BaseStoreImpl class.  Created tests of the methods using 
the DOM data store.

4 Sep. 2007
Added BDB XML indexing of the arcroleType and roleType URI attributes.

Added ability to recognise generic labels and references as 
standard labels and references, respectively.

Added the isProhibited method to arcs.

1 Sep. 2007
Added a method to get linkroles that contain arcs using a specified arcrole.

15 Aug. 2007

Added getSimpleLinks method to the fragment interface to get the child simple links of any fragment.

Checked unit tests against the latest cut of the XBRL 2.1 conformance suite.

Enabled caching for documents provided to a loader as a string rather than a URL.
This fixed a bug in the XML Schema grammar construction for schemas provided as a
string to the loader.

Fixed a database deletion problem in the Xindice tests that arose because of 
multiple simultaneous stores using the same database.

Provided a new getChildFragments method of the data store to enable retrieval of all
child fragments with a given data type.

14 Aug. 2007
Enabled the discovery processes to optionally include analysis of XSI schema 
location attributes.

Added schema method to enable discovery of extended links contained within the schema.

11 Aug 2007
Added new discoverNext method to the loader implementation to enable intervention 
in the load process between each document that gets parsed.

Added unit tests of the discoverNext method using in-memory and persistent data stores.

9 August, 2007
Added unit tests to cover discovery of reference part declarations.

8 Aug. 2007
Fixed bug in the SimpleLink#getTargetFragment where href attributes without an XPointer
 would generate a query that did not restrict matching fragments to the document root.

Extended the set of nodes in a data store that are indexed for equality matching for the 
BDB XML database implementation.

Added getImports and getIncludes methods to the Schema fragment API.

Added unit tests to cover schema imports.

July 29, 2007
Added new objects to provide functionality at the level
of individual relationships and networks of relationships.
Fixed up NPE bug in the hasFragment method of the eXist data store.

May 21, 2007
Fixed up omission of class files from the JAR file.

March 23, 2007
Created the api module by splitting 
out the non-DOM data store implementations
and by splitting out the XLink, XMLBase and
XPointer packages.

October 02, 2006
Completed implementation and testing 
of read-access fragment API.

September 25, 2006
Fixed up the Exist indexing.
Added a lot of fragment interface implementation.
Merged the data and metadata collections.
Fixed up the Jar file manifest to make the -jar file option
work from execution at the commandline.

September 14, 2006
Added in the patch from Henry S Thompson 
to support XLink 1.1.
Improved usability from the command line.
Extended the implementation of the fragment.

August 10, 2006
Implemented the data store using eXist and
using an XML-DOM object.  These are alternatives
to the Xindice data store implementation.

July 29. 2006
Created the Oracle Berkeley Database XML data store module.
Created the core utilities module that is required by all other modules.

March 23. 2006
Created the eXist module by splitting it 
out from the xbrlapi. This limits XBRLAPI 
dependencies on eXist to those users choosing
to use eXist as the data store implementation.

December 11, 2005
Version 1.0 of the XPointer processor released.

December 9. 2005
Fixed errors in the previous release.
Updated the API to handle XPointers.
Added early support for the eXist database.

July 23. 2005
Initial cut of the XBRL API source code.
Operational version of the XML Base resolver.

May 6, 2005
Initial cut of XLink processor.
Initial cut of XML Base resolver.
