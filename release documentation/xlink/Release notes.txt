Release details:

Release 5.0
July 31, 2009
New release that strengthens the validation of XLink attributes.
This ensures that various XLink attributes are not used incorrectly
on the wrong kinds of XLink elements.

Release 4.0
January 7, 2009
Backward incompatible release of the API involving changes
to many method signatures - almost all of which are related
to the decision to replace java.net.URL with java.net.URI where
possible.

Release 3.4
December 10, 2008
Fixed problems in construction of JAR files with the 3.3 release.

Release 3.3
November 24, 2008
Added Attributes to the endElement method because some custom
links can only be recognisable given their attributes rather than
the element name.
Added the ElementState class to the org.xbrlapi.xlink package
to provide basic infrastructure for tracking attributes and making
them available to the endElement method in SAX content handlers that
are using the XLink processor. 


Release 3.2
Jul 30, 2008
No changes since the last release.
Updated release number to keep in line with other modules.

Release 3.1
Feb 28, 2008
Point release to include various bug-fixes. 

Release 3.0
Date July 29, 2007
Updated release number to keep in line with other modules.

Release 2.0
Date March 23, 2007
New release to bring into line with
release numbers for other packages
for the XBRLAPI.

Release: 1.1
Date: September 14, 2006
Now supports the XLink 1.1 specification.

Release: 1.01
Date: May 9, 2005

XBRLAPI XLink Processor

The XLink processor is a lightweight 
but complete XLink event handling system.
A SAX event handler with an XBRLAPI XLink 
Processor will trigger an XLink
event for any XLink element (start or finish).  
The XLink processor expects
and XLink event handler to be provided.  
That XLink event handler should implement
the functionality desired of the XLink structure.

Simple and extended links are handled.

Installation instructions.

1. Make sure you have Java 1.42 installed 
(this has not been tested with other versions)
2. Install the binary jar file on your classpath.
3. Make sure you have a recent version of the 
Xerces JARs installed.
4. Review the javadoc API documentation and the 
JUnit test cases if you need examples.
